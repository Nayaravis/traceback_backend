{
  "errors": [
    {
      "id": "1",
      "title": "getElementById returns null",
      "description": "Element not found when trying to select by ID, usually because DOM hasn't loaded or ID doesn't exist.",
      "code": "const button = document.getElementById('submit-btn');\nbutton.addEventListener('click', handleClick); // Error: Cannot read property 'addEventListener' of null",
      "tags": [
        "JavaScript",
        "DOM",
        "null"
      ],
      "status": "pending",
      "solution": "Wrap in DOMContentLoaded event or place script before closing body tag:\ndocument.addEventListener('DOMContentLoaded', () => {\n  const button = document.getElementById('submit-btn');\n  if (button) {\n    button.addEventListener('click', handleClick);\n  }\n});",
      "timestamp": "2025-06-25T13:11:53.153Z",
      "project": "Todo List App",
      "githubLink": "https://github.com/user/todo-app"
    },
    {
      "id": "2",
      "title": "CSS flexbox items not centering",
      "description": "Items in flex container not centering vertically despite justify-content and align-items properties.",
      "code": ".container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100px;\n}\n/* Items still not centered vertically */",
      "tags": [
        "CSS",
        "flexbox",
        "centering"
      ],
      "status": "solved",
      "solution": "Ensure container has defined height and check for conflicting margin/padding:\n.container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh; /* Use viewport height */\n  margin: 0;\n  padding: 0;\n}",
      "timestamp": "2025-06-24T13:45:00Z",
      "project": "Landing Page",
      "githubLink": "https://github.com/user/landing-page"
    },
    {
      "id": "3",
      "title": "onclick function not defined",
      "description": "HTML onclick attribute references a function that doesn't exist in global scope.",
      "code": "<button onclick=\"submitForm()\">Submit</button>\n\n// Function defined inside another scope\nwindow.addEventListener('load', () => {\n  function submitForm() {\n    console.log('submitting');\n  }\n});",
      "tags": [
        "HTML",
        "JavaScript",
        "scope"
      ],
      "status": "pending",
      "solution": "",
      "timestamp": "2025-06-24T13:30:00Z",
      "project": "Contact Form",
      "githubLink": "https://github.com/user/contact-form"
    },
    {
      "id": "4",
      "title": "CSS background image not showing",
      "description": "Background image property set but image doesn't display on the webpage.",
      "code": ".hero {\n  background-image: url('images/hero.jpg');\n  width: 100%;\n  height: 400px;\n}",
      "tags": [
        "CSS",
        "background-image",
        "path"
      ],
      "status": "solved",
      "solution": "Check file path and add background properties:\n.hero {\n  background-image: url('./images/hero.jpg');\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  width: 100%;\n  height: 400px;\n}",
      "timestamp": "2025-06-24T12:15:00Z",
      "project": "Portfolio Site",
      "githubLink": "https://github.com/user/portfolio"
    },
    {
      "id": "5",
      "title": "addEventListener is not a function",
      "description": "Trying to add event listener to NodeList instead of individual element.",
      "code": "const buttons = document.querySelectorAll('.btn');\nbuttons.addEventListener('click', handleClick); // Error",
      "tags": [
        "JavaScript",
        "DOM",
        "NodeList"
      ],
      "status": "solved",
      "solution": "Loop through NodeList to add listeners to each element:\nconst buttons = document.querySelectorAll('.btn');\nbuttons.forEach(button => {\n  button.addEventListener('click', handleClick);\n});",
      "timestamp": "2025-06-24T11:50:00Z",
      "project": "Calculator App",
      "githubLink": "https://github.com/user/calculator"
    },
    {
      "id": "6",
      "title": "Form submits but page refreshes",
      "description": "HTML form submission causing unwanted page reload despite JavaScript handling.",
      "code": "<form>\n  <input type=\"text\" id=\"name\">\n  <button onclick=\"handleSubmit()\">Submit</button>\n</form>\n\nfunction handleSubmit() {\n  const name = document.getElementById('name').value;\n  console.log(name);\n  // Page still reloads\n}",
      "tags": [
        "HTML",
        "JavaScript",
        "form",
        "event"
      ],
      "status": "pending",
      "solution": "",
      "timestamp": "2025-06-26T05:46:17.362Z",
      "project": "Registration Form",
      "githubLink": "https://github.com/user/registration"
    },
    {
      "id": "7",
      "title": "CSS grid items overlapping",
      "description": "Grid items stacking on top of each other instead of arranging in defined columns.",
      "code": ".grid-container {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n}\n\n.grid-item {\n  grid-column: 1;\n  /* All items assigned to same column */\n}",
      "tags": [
        "CSS",
        "grid",
        "layout"
      ],
      "status": "solved",
      "solution": "Remove explicit grid-column assignment to let items flow naturally:\n.grid-container {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 20px;\n}\n\n.grid-item {\n  /* Remove grid-column assignment */\n}",
      "timestamp": "2025-06-24T10:45:00Z",
      "project": "Photo Gallery",
      "githubLink": "https://github.com/user/photo-gallery"
    },
    {
      "id": "8",
      "title": "innerHTML not updating display",
      "description": "Setting innerHTML property but changes not reflecting in browser.",
      "code": "const output = document.getElementById('output');\noutput.innerHTML = 'New content';\n// Content doesn't change visually",
      "tags": [
        "JavaScript",
        "DOM",
        "innerHTML"
      ],
      "status": "solved",
      "solution": "Check if element exists and ensure no CSS hiding the content:\nconst output = document.getElementById('output');\nif (output) {\n  output.innerHTML = 'New content';\n  console.log('Content updated:', output.innerHTML);\n}\n// Also check CSS for display: none or visibility: hidden",
      "timestamp": "2025-06-24T10:30:00Z",
      "project": "Dynamic Content App",
      "githubLink": "https://github.com/user/dynamic-app"
    },
    {
      "id": "9",
      "title": "CSS hover effect not working on mobile",
      "description": "Hover pseudo-class effects don't trigger on touch devices.",
      "code": ".button {\n  background-color: blue;\n}\n\n.button:hover {\n  background-color: red;\n  transform: scale(1.1);\n}",
      "tags": [
        "CSS",
        "hover",
        "mobile",
        "responsive"
      ],
      "status": "pending",
      "solution": "",
      "timestamp": "2025-06-24T09:15:00Z",
      "project": "Mobile Menu",
      "githubLink": "https://github.com/user/mobile-menu"
    },
    {
      "id": "10",
      "title": "Local storage data disappearing",
      "description": "Data stored in localStorage not persisting between browser sessions.",
      "code": "// Storing data\nlocalStorage.setItem('username', 'john');\n\n// Later trying to retrieve\nconst username = localStorage.getItem('username');\nconsole.log(username); // null",
      "tags": [
        "JavaScript",
        "localStorage",
        "persistence"
      ],
      "status": "solved",
      "solution": "Check for incognito mode and add error handling:\ntry {\n  localStorage.setItem('username', 'john');\n  console.log('Data stored successfully');\n} catch (error) {\n  console.log('Storage failed:', error);\n  // Fallback to session storage or cookies\n}\n\n// Always check if data exists\nconst username = localStorage.getItem('username') || 'guest';",
      "timestamp": "2025-06-24T08:30:00Z",
      "project": "User Preferences",
      "githubLink": "https://github.com/user/user-prefs"
    }
  ]
}